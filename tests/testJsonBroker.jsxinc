/**
 *
 * @classdesc testJsonBroker
 * 
 * @constructor
 */
Indigo.Tests.testJsonBroker = function() {};
Indigo.Tests.testJsonBroker.prototype = new Indigo.Tests.testSuite(app);
Indigo.Tests.testJsonBroker.prototype.constructor = Indigo.Tests.testJsonBroker;
Indigo.Tests.testJsonBroker.prototype.name = 'testJsonBroker';

Indigo.Tests.testJsonBroker.prototype.setUp = function() {
	this.pocient = new Indigo.JsonBroker();
};

/**
 * Test
 */
Indigo.Tests.testJsonBroker.prototype.run = function() {
	// Encode test
	var encodeObj = {
		integer: 55,
		string: "Arrr",
		array: ['да', 'no'],
		object: {
			"bar" : "foo",
		},
		path: "\\var\\log\\\\messages"
	};
	var expectedString = '{"integer":55,"string":"Arrr","array":["\\u0434\\u0430","no"],"object":{"bar":"foo"},"path":"/var/log//messages"}';
	var encodedObj = this.pocient.encode(encodeObj);
	var resultEnc = this.assertEq(encodedObj, expectedString);
	this.log(resultEnc, '.Encode');

	// Decode test
	var encodedString = '{"id":55,"result":"%D0%A5%D0%BE-%D1%85%D0%BE!"}';
	var expectedObj = {
		id: 55,
		result: "Хо-хо!"
	};
	var decodedObj = this.pocient.decode(encodedString);
	var resultDec = this.assertObjectsSame(decodedObj,expectedObj);
	this.log(resultDec, '.Decode');

	// Evil code dumb test
	// Этот алерт НИКОГДА НЕ ДОЛЖЕН ПОЯВИТЬСЯ, иначе это означает
	// возможность исполнения произвольного кода на локальной машине!
	var evil = "alert('Im here to eat you brain!');";
	var evilBehavior = this.pocient.decode(evil);
	var resultEvil = this.assertUndefined(evilBehavior);
	this.log(resultEvil, '.EvilCode');
};

Indigo.Tests.testJsonBroker.prototype.tearDown = function() {
};
