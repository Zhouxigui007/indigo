/**
 * 
 * @classdesc testTemplateScanner
 * 
 * @constructor
 */
Indigo.Tests.testTemplateScanner = function() {};
Indigo.Tests.testTemplateScanner.prototype = new Indigo.Tests.testSuite(app);
Indigo.Tests.testTemplateScanner.prototype.constructor = Indigo.Tests.testTemplateScanner;
Indigo.Tests.testTemplateScanner.prototype.name = 'testTemplateScanner';

Indigo.Tests.testTemplateScanner.prototype.setUp = function () {
	this.pocient = new Indigo.TemplateScanner(this.app);
	this.pocient.setup(this.getMockJob());
	this.pocient.templateFolder = new Folder(this.testsFilesFolder + this.name);
};

/**
 * Test
 */
Indigo.Tests.testTemplateScanner.prototype.run = function() {

	this.pocient.job.templates = ['t-01', 't-03'];
	this.pocient.getTemplates();
	var templatesList = this.assertEq(this.pocient.templates.length, 1);
	this.log(templatesList, '.FindExpected 1');
	var filteredName = this.pocient.templates[0].name;
	var filtered = this.assertEq(filteredName, 't-02.ait');
	this.log(filtered, '.FindExpected t-02');

	this.pocient.job.templates = ['t-01', 't-02', 't-03'];
	this.pocient.getTemplates();
	templatesList = this.assertEq(this.pocient.templates.length, 0);
	this.log(templatesList, '.FindExpected 0');

	this.pocient.job.templates = [];
	this.pocient.getTemplates();
	templatesList = this.assertEq(this.pocient.templates.length, 3);
	this.log(templatesList, '.FindExpected 3');

	this.pocient.job.templates = [];
	var templatesSpecs = this.pocient.run();
	this.log(this.assertEq(this.pocient.templates.length, 0), '.AllProcessedArr');
	this.log(this.assertEq(templatesSpecs.data.length, 3), '.AllProcessedObj');
	
	var spec = templatesSpecs.data[0];
	this.log(this.assertEq(spec.name, 't-01'), '.Name 1');
	this.log(this.assertEq(spec.status, 'done'), '.Status');
	this.log(this.assertEq(spec.width, 215.433), '.Width');
	this.log(this.assertEq(spec.height, 394.016), '.Height');

	spec = templatesSpecs.data[1];
	this.log(this.assertEq(spec.name, 't-02'), '.Name 2');
	this.log(this.assertEq(spec.status, 'error'), '.Status');
	this.log(this.assertInstanceOf(spec.errors, Array), '.Has Errors');
	this.log(this.assertEq(spec.errors.length, 2), '.Has Exact Errors');
	this.log(this.assertEq(spec.errors[0], 'Rolls unstable'), '.ErrMessage1');
	this.log(this.assertEq(spec.errors[1], 'Roll "roll_2_5" absent'), '.ErrMessage2');

	spec = templatesSpecs.data[2];
	this.log(this.assertEq(spec.name, 't-03'), '.Name 3');
	this.log(this.assertEq(spec.status, 'error'), '.Status');
	this.log(this.assertInstanceOf(spec.errors, Array), '.Has Errors');
	this.log(this.assertEq(spec.errors.length, 1), '.Has Exact Errors');
	this.log(this.assertEq(spec.errors[0], 'No "cut" layer in template'), '.ErrMessage1');

	this.pocient.templateFolder = new Folder('/dev/random');
	var exc = this.assertThrows(this.pocient.getTemplates, 'Template folder not found');
	this.log(exc, 'ThrowsExpected');
};

Indigo.Tests.testTemplateScanner.prototype.tearDown = function() {};
